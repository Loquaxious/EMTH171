% emth171 case study 2
% jackson crawford
% modelling of the water level in hydroelectric dams as a function of power
% consumption in new zealand

clear
clc


% variables
p = 998;
g = 9.81;
k = 1.55;
l = 300;
aNI = 620*1e6;
aSI = 350*1e6;
pGeo = 1525;
pNIdem = @(t) (4065+1.4e6*normpdf(t, 5000, 1000));
pSIdem = 1940;
northIslandWind = 2065;
southIslandWind = 2065;

% arrays, initial values for ODE's

tArray = 1:8760;

vNISpillArray = 0;

vSISpillArray = 0;

hNIArray = 357;

hSIArray = 406;

% functions


fNIin = @(t) 345 + 73*sin((2*pi*(t-3624))/8760);
northIslandInArray = fNIin(0);

fSIin = @(t) 593 - 183*sin((2*pi*(t-2320))/8760);
southIslandInArray = fSIin(0);
% pHydroSI = @(fGen) (0.9*fGen*p*g*(h))/10^6;

SIHydroArray = 0;
NIHydroArray = 0;

northIslandDemandArray = 0;
northIslandGenArray = 0;
southIslandGenArray = 0;
deficitArray = 0;

for n = tArray
t = tArray(n);

% current power demand of north and south islands, MW
currentNorthIslandDemand = pNIdem(t);
currentSouthIslandDemand = pSIdem;

% current flow rate into each reservoir, m^3s^-1
inflowNorthIsland = fNIin(t);
inflowSouthIsland = fSIin(t);

northIslandInArray = [northIslandInArray, inflowNorthIsland];
southIslandInArray = [southIslandInArray, inflowSouthIsland];
% flow out of the north island dam used for generating power, m^3s^-1
genFlowNorthIsland = inflowNorthIsland;

% power generated by north island hydro as a function of the height, MW
hydroGenNorthIsland = (0.9*genFlowNorthIsland*p*g*(hNIArray(n)-80))/10^6;

% wind capacity factor, constant over the two islands based on time of
% year, general indicator of wind farm efficiency
windCapacityFactor = 0.41 + 0.12*sin((2*pi*(t-5660))/8760);

% total generation of power out of the north island, MW
northIslandTotalGen = pGeo + hydroGenNorthIsland + (northIslandWind * windCapacityFactor);

% total power demand of the north island, based on time of year, MW
northIslandDemand = 4065+1.4e6*normpdf(t, 5000, 1000);

% north island power deficit, e.g power needing to be routed north from
% south island production through HVDC cable, MW
northIslandDeficit = (northIslandDemand - northIslandTotalGen);

deficitArray = [deficitArray, northIslandDeficit];

% power requirement from the south island, taken from power demand of south
% island + power required to be sent to north island, - power generated
% from wind farms in the south island based on the time of year, MW
southIslandHydro = pSIdem + northIslandDeficit - (southIslandWind * windCapacityFactor);

% water flow required through south island hydro to produce required power,
% m^3s^-1
genFlowSouthIsland = ((10^6*southIslandHydro)/(0.9*p*g*(hSIArray(n))));

SIHydroArray = [SIHydroArray, southIslandHydro];
NIHydroArray = [NIHydroArray, hydroGenNorthIsland];
% set initial spill rates for both dams, if the height of the water is not
% above the height of the dam, there is no spill, m^3s^-1

if hNIArray(n) > 357.25
    fSpillNI = k*l*(hNIArray(n)-357.25)^1.5;
else
    fSpillNI = 0;
end
if hSIArray(n) > 410
    fSpillSI = k*l*(hSIArray(n)-410)^1.5;
else
    fSpillSI = 0;
end

% rate of spill in m^3s^-1, multiplied by 3600 to attain m^3h^-1
dvdtNISpill = fSpillNI;

dvdtSISpill = fSpillSI;

% rate of height change in each lake derived from net water flow, ms^-1
dhdtNI = ((inflowNorthIsland - genFlowNorthIsland - fSpillNI)/aNI);

dhdtSI = ((inflowSouthIsland - genFlowSouthIsland - fSpillSI)/aSI);

% next lake height in north island for euler's method, m
hNINext = hNIArray(n) + dhdtNI*3600;

% append next height to array of heights for plot
hNIArray = [hNIArray, hNINext];

% next lake height in south island for euler's method, m
hSINext = hSIArray(n) + dhdtSI*3600;

% append next height to array of heights for plot
hSIArray = [hSIArray, hSINext];

% append volume spilt to arrays of volume previously spilt
vNISpillArray = [vNISpillArray,(vNISpillArray(n) + dvdtNISpill*3600)];

vSISpillArray = [vSISpillArray,(vSISpillArray(n) + dvdtSISpill*3600)];

northIslandDemandArray = [northIslandDemandArray, northIslandDemand];
northIslandGenArray = [northIslandGenArray, northIslandTotalGen];
end
 
tArray = [tArray, 8761];

figure
plot(tArray, hNIArray, tArray, hSIArray);
title('height against time')
legend('north island height', 'south island height')

figure
plot(tArray, southIslandInArray, tArray, northIslandInArray)
title('water in against time')
legend('south island water in', 'north island water in')

totalDemandArray = northIslandDemandArray + 1940;
figure
plot(tArray, northIslandDemandArray, tArray, northIslandGenArray, tArray, SIHydroArray, tArray, totalDemandArray, tArray, deficitArray)
title('north island power demand, north island power generation, south island hydro generation and total demand against time')
legend('north island power demand', 'north island power generation', 'south island hydro generation', 'total demand', 'deficit')

figure
plot(tArray, SIHydroArray, tArray, NIHydroArray)
title('hydro power generated against time')
legend('south island hydro', 'north island hydro')

figure
plot(tArray, hSIArray);
title('south island height against time')

figure
plot(tArray, vSISpillArray);
title('south island spillage against time')